services:

  streamlit:
    build:
      context: ./streamlit_app
      dockerfile: Dockerfile.streamlit
    container_name: streamlit_app
    ports:
      - "8501:8501"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/app/data
      - ./models:/app/models
      - ./src:/app/src
      - ./.dvc:/app/.dvc
      - ./.git:/app/.git
    env_file: .env
    environment:
      - DATA_DIR=/app/data
      - MODEL_DIR=/app/models
    networks:
      - airflow_net

  api:
    build:
      context: ./api_service
      dockerfile: Dockerfile.API
    container_name: api_service
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./src:/app/src
      - ./.dvc:/app/.dvc
      - ./.git:/app/.git
    env_file: .env
    environment:
      - DATA_DIR=/app/data
      - MODEL_DIR=/app/models
    networks:
      - airflow_net

  postgres:
    image: postgres:13
    container_name: postgres_airflow
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - airflow_net

  airflow-webserver:
    build:
      context: .
      dockerfile: airflow/Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    working_dir: /opt/airflow
    env_file: .env
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW_UID=50000
      - DATA_DIR=/opt/airflow/data
      - MODEL_DIR=/opt/airflow/models
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/logs:/opt/airflow/logs
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./.dvc:/opt/airflow/.dvc
      - ./.git:/opt/airflow/.git
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true &&
        airflow webserver
      "
    networks:
      - airflow_net

  airflow-scheduler:
    build:
      context: .
      dockerfile: airflow/Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - postgres
    working_dir: /opt/airflow
    env_file: .env
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW_UID=50000
      - DATA_DIR=/opt/airflow/data
      - MODEL_DIR=/opt/airflow/models
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/logs:/opt/airflow/logs
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./.dvc:/opt/airflow/.dvc
      - ./.git:/opt/airflow/.git
    command: airflow scheduler
    networks:
      - airflow_net

  bentoml:
    build:
      context: ./bento_service
      dockerfile: Dockerfile.Bento
    container_name: bentoml_service
    ports:
      - "3000:3000"
    volumes:
      - ./bento_service:/app
      - ./src:/app/src
      - ./models:/app/models
      - ./data:/app/data
      - ./.dvc:/app/.dvc
      - ./.git:/app/.git
    env_file: .env        # <--- DAS FEHLT!
    environment:
      - TZ=Europe/Berlin
      - DATA_DIR=/app/data
      - MODEL_DIR=/app/models
    networks:
      - airflow_net
    restart: always

volumes:
  postgres_db:

networks:
  airflow_net: {}